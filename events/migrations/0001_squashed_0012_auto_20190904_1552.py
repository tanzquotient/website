# -*- coding: utf-8 -*-
# Generated by Django 1.11.27 on 2020-02-15 10:56
from __future__ import unicode_literals

import django.db.models.deletion
import parler.fields
from django.conf import settings
from django.db import migrations, models
from djangocms_text.fields import HTMLField


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# events.migrations.0007_auto_20160902_1135
# events.migrations.0011_auto_20190425_1717


def migrate_untranslated(apps, schema_editor):
    MyModel = apps.get_model("events", "Event")
    MyModelTranslation = apps.get_model("events", "EventTranslation")

    for object in MyModel.objects.all():
        MyModelTranslation.objects.create(
            master_id=object.pk,
            language_code="de",
            description=object.description,
        )


def migrate_untranslated(apps, schema_editor):
    events = apps.get_model("events", "Event")
    event_translations = apps.get_model("events", "EventTranslation")

    for item in events.objects.all():
        for code in ["de", "en"]:
            db_item = event_translations.objects.filter(
                master_id=item.pk,
                language_code=code,
            )

            if db_item.exists():
                db_item.update(
                    name=item.name,
                    price_special=item.price_special,
                )
            else:
                event_translations.objects.create(
                    master_id=item.pk,
                    language_code=code,
                    name=item.name,
                    price_special=item.price_special,
                )


class Migration(migrations.Migration):
    replaces = [
        ("events", "0001_initial"),
        ("events", "0002_auto_20150209_1113"),
        ("events", "0003_auto_20150319_1303"),
        ("events", "0004_eventsteaserpluginmodel"),
        ("events", "0005_auto_20150326_1702"),
        ("events", "0006_auto_20160704_1158"),
        ("events", "0007_auto_20160902_1135"),
        ("events", "0008_auto_20160905_1307"),
        ("events", "0009_auto_20170614_0757"),
        ("events", "0010_auto_20170614_0929"),
        ("events", "0011_auto_20190425_1717"),
        ("events", "0012_auto_20190904_1552"),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("cms", "0001_initial"),
        ("courses", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text=b"The name of this event (e.g. 'Freies Tanzen')",
                        max_length=255,
                    ),
                ),
                ("date", models.DateField()),
                ("time_from", models.TimeField(blank=True, null=True)),
                ("time_to", models.TimeField(blank=True, null=True)),
                (
                    "price_with_legi",
                    models.FloatField(
                        blank=True,
                        help_text=b"Leave this empty for free entrance",
                        null=True,
                    ),
                ),
                (
                    "price_without_legi",
                    models.FloatField(
                        blank=True,
                        help_text=b"If this is a special event that should be emphasized on website",
                        null=True,
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "description",
                    HTMLField(blank=True, null=True),
                ),
                ("special", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["date", "time_from", "room"],
            },
        ),
        migrations.CreateModel(
            name="Organise",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organising",
                        to="events.Event",
                    ),
                ),
                (
                    "organiser",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organising",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="event",
            name="organisators",
            field=models.ManyToManyField(
                related_name="organising_events",
                through="events.Organise",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="room",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="events",
                to="courses.Room",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="display",
            field=models.BooleanField(
                default=True,
                help_text="Defines if this event should be displayed on the website.",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="price_without_legi",
            field=models.FloatField(
                blank=True, help_text=b"Leave this empty for free entrance", null=True
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="special",
            field=models.BooleanField(
                default=False,
                help_text=b"If this is a special event that should be emphasized on the website",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="description",
            field=HTMLField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name="EventsTeaserPluginModel",
            fields=[
                (
                    "cmsplugin_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="cms.CMSPlugin",
                    ),
                ),
                (
                    "delta_days",
                    models.IntegerField(
                        blank=True,
                        help_text="Events within the time delta (in days) from now on are shown. Leave empty to make no restrictions.",
                        null=True,
                    ),
                ),
                (
                    "max_displayed",
                    models.IntegerField(
                        blank=True,
                        help_text="Maximum number of events to be displayed. Leave empty to make no restrictions.",
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("cms.cmsplugin",),
        ),
        migrations.RemoveField(
            model_name="event",
            name="comment",
        ),
        migrations.AddField(
            model_name="event",
            name="image",
            field=models.ImageField(
                blank=True, help_text="Advertising image for this event.", null=True
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="price_special",
            field=models.CharField(
                blank=True,
                help_text="Set this only if you want a different price schema.",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="name",
            field=models.CharField(
                help_text="The name of this event (e.g. 'Freies Tanzen')",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="price_with_legi",
            field=models.FloatField(
                blank=True, help_text="Leave this empty for free entrance", null=True
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="price_without_legi",
            field=models.FloatField(
                blank=True, help_text="Leave this empty for free entrance", null=True
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="special",
            field=models.BooleanField(
                default=False,
                help_text="If this is a special event that should be emphasized on the website",
            ),
        ),
        migrations.CreateModel(
            name="EventTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                (
                    "description",
                    HTMLField(blank=True, null=True),
                ),
                (
                    "master",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="events.Event",
                    ),
                ),
            ],
            options={
                "verbose_name": "event Translation",
                "default_permissions": (),
                "db_tablespace": "",
                "managed": True,
                "db_table": "events_event_translation",
            },
        ),
        migrations.AlterUniqueTogether(
            name="eventtranslation",
            unique_together=set([("language_code", "master")]),
        ),
        migrations.RunPython(
            code=migrate_untranslated,
        ),
        migrations.RemoveField(
            model_name="event",
            name="description",
        ),
        migrations.AlterField(
            model_name="eventsteaserpluginmodel",
            name="cmsplugin_ptr",
            field=models.OneToOneField(
                auto_created=True,
                on_delete=django.db.models.deletion.CASCADE,
                parent_link=True,
                primary_key=True,
                related_name="events_eventsteaserpluginmodel",
                serialize=False,
                to="cms.CMSPlugin",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="room",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="events",
                to="courses.Room",
            ),
        ),
        migrations.AlterField(
            model_name="eventtranslation",
            name="description",
            field=HTMLField(blank=True, null=True, verbose_name="[TR] Description"),
        ),
        migrations.AlterModelOptions(
            name="event",
            options={"ordering": ["-date", "-time_from"]},
        ),
        migrations.AddField(
            model_name="eventtranslation",
            name="name",
            field=models.CharField(
                default="Untranslated",
                max_length=255,
                verbose_name="[TR] The name of this event (e.g. 'Freies Tanzen')",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="eventtranslation",
            name="price_special",
            field=models.CharField(
                blank=True,
                max_length=255,
                null=True,
                verbose_name="Set this only if you want a different price schema.",
            ),
        ),
        migrations.RunPython(
            code=migrate_untranslated,
        ),
        migrations.RemoveField(
            model_name="event",
            name="name",
        ),
        migrations.RemoveField(
            model_name="event",
            name="price_special",
        ),
        migrations.AlterField(
            model_name="eventtranslation",
            name="master",
            field=parler.fields.TranslationsForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="translations",
                to="events.Event",
            ),
        ),
    ]
