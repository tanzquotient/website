# Generated by Django 5.2.5 on 2025-08-15 18:16

from django.db import migrations, models

from courses.utils.skill import calculate_dance_levels_for_user


def initialize_dance_levels(apps, schema_editor) -> None:
    skill_model = apps.get_model("courses", "Skill")
    skill_dance_level_model = apps.get_model("courses", "SkillDanceLevel")
    for skill in skill_model.objects.prefetch_related("user").all():
        for_user = calculate_dance_levels_for_user(skill.user)
        for item in for_user:
            skill_dance_level_model.objects.get_or_create(
                skill=skill, style=item.style, level=item.level
            )


class Migration(migrations.Migration):
    dependencies = [
        ("courses", "0059_skilldancelevel"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="skilldancelevel",
            options={
                "ordering": ("skill", "level", "style"),
                "verbose_name": "dance level",
            },
        ),
        migrations.AlterField(
            model_name="skill",
            name="unlocked_course_types",
            field=models.ManyToManyField(
                blank=True,
                help_text="Course types which this user has unlocked. For example, participating Ballroom 5 unlocks Ballroom 1-5. This information can be used for checking whether prerequisites are met, i.e for participating in an advanced course, or substituting for a lesson.",
                related_name="skills",
                to="courses.coursetype",
            ),
        ),
        migrations.RunPython(initialize_dance_levels),
    ]
